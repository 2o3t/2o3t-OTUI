// base
$NAME_MAP: (default: def, primary: pri, success: suc, warning: war, danger: dan, info: inf);
$LEIXING_MAP: (font: f, background: bg, border: b, border-top: bt, border-left: bl, border-right: br, border-bottom: bb);
$BORDER_MAP: (border-color: border, border-top-color: border-top, border-left-color: border-left, border-right-color: border-right, border-bottom-color: border-bottom);

// ============ NEW ============

// 更改边框大小和样式
@mixin __ot_mixin_color_inner_border__($prefix, $shuxin) {
    @if $--not-style-border--enable == true {
        @each $key, $val in $BORDER_MAP {
            @if $shuxin == $key {
                #{$val}-style: solid;
                #{$val}-width: 0px;
                &[border], &[#{$prefix}-color-border],  {
                    #{$val}-width: 1px;
                }
            }
        }
    }
}

@mixin __ot_mixin_color_inner__($prefix, $shuxin, $value) {
    #{$shuxin}: #{$value};
    @include __ot_mixin_color_inner_border__($prefix, $shuxin);

    @if $shuxin == 'background-color' {
        &[#{$prefix}-color-stroke] {
            stroke: #{$value};
        }
        &[#{$prefix}-color-fill] {
            fill: #{$value};
        }
    }

    &[#{$prefix}-color-after]:after, &[#{$prefix}-color-before]:before {
        #{$shuxin}: #{$value};
        @include __ot_mixin_color_inner_border__($prefix, $shuxin);
    }
}

@mixin __ot_mixin_color_inner_action__($prefix, $shuxin, $value, $action) {
    $flag: true;
    @each $a in ('hover', 'active', 'focus') {
        @if $a == $action {
            $flag: false;
            &:not([disabled]) {
                cursor: pointer;
                &:#{$action} {
                    @include __ot_mixin_color_inner__($prefix, $shuxin, $value);
                }
            }
        }
    }
    @each $a in ('disabled', 'selected') {
        @if $a == $action {
            $flag: false;
            &[#{$action}] {
                @if $action == 'disabled' {
                    cursor: not-allowed;
                }
                @include __ot_mixin_color_inner__($prefix, $shuxin, $value);
            }
        }
    }

    @if $flag == true {
        @include __ot_mixin_color_inner__($prefix, $shuxin, $value);
    }
}

// 格式: ot-color-font[disabled][selected][hover][focus][active] ot-color="default"
// 对照: ${prefix}-color-${leixin}[${action}]  ${prefix}-color="${color}"


// $prefix 前缀
// $name 颜色名称
// $shuxin css属性
// $value 颜色值
// $action 行为
// $leixing 类型
// $subfix 后缀
@mixin __ot_mixin_color__($prefix, $name, $shuxin, $value, $leixing, $action, $subfix) {
    $ex: "#{$prefix}__color__#{$name}__#{$leixing}__#{$action}";

    ##{$ex}, [#{$prefix}][#{$prefix}-color-#{$name}-#{$leixing}-#{$action}] {
        @if $subfix != null {
            &[#{$prefix}-color-#{$subfix}] {
                @include __ot_mixin_color_inner_action__($prefix, $shuxin, $value, $action);
            }
        } @else {
            @include __ot_mixin_color_inner_action__($prefix, $shuxin, $value, $action);
        }
    }
}

@mixin otMixinColor($prefix, $name, $shuxin, $value, $leixing, $action, $subfix){
    @include __ot_mixin_color__($prefix, $name, $shuxin, $value, $leixing, $action, $subfix);

    // @each $sb1, $sb2 in $LEIXING_MAP {
    //     @if $leixing == $sb1 {
    //         @include __ot_mixin_color__($prefix, $name, $shuxin, $value, $sb2, $action, $subfix);
    //     }
    // }
}
