// 主程序背景色
$--color-main-background: #FFFFFF !default;
// 主颜色
$--color-main-font: #314659 !default;

$--color-white: #FFFFFF !default;
$--color-black: #000000 !default;

// primary
$--color-primary: #409EFF !default;
$--color-primary-light-1: mix($--color-white, $--color-primary, 10%) !default; /* 53a8ff */
$--color-primary-light-2: mix($--color-white, $--color-primary, 20%) !default; /* 66b1ff */
$--color-primary-light-3: mix($--color-white, $--color-primary, 30%) !default; /* 79bbff */
$--color-primary-light-4: mix($--color-white, $--color-primary, 40%) !default; /* 8cc5ff */
$--color-primary-light-5: mix($--color-white, $--color-primary, 50%) !default; /* a0cfff */
$--color-primary-light-6: mix($--color-white, $--color-primary, 60%) !default; /* b3d8ff */
$--color-primary-light-7: mix($--color-white, $--color-primary, 70%) !default; /* c6e2ff */
$--color-primary-light-8: mix($--color-white, $--color-primary, 80%) !default; /* d9ecff */
$--color-primary-light-9: mix($--color-white, $--color-primary, 90%) !default; /* ecf5ff */

$--color-primary-dark-1: mix($--color-black, $--color-primary, 10%) !default;
$--color-primary-dark-2: mix($--color-black, $--color-primary, 20%) !default;
$--color-primary-dark-3: mix($--color-black, $--color-primary, 30%) !default;
$--color-primary-dark-4: mix($--color-black, $--color-primary, 40%) !default;
$--color-primary-dark-5: mix($--color-black, $--color-primary, 50%) !default;
$--color-primary-dark-6: mix($--color-black, $--color-primary, 60%) !default;
$--color-primary-dark-7: mix($--color-black, $--color-primary, 70%) !default;
$--color-primary-dark-8: mix($--color-black, $--color-primary, 80%) !default;
$--color-primary-dark-9: mix($--color-black, $--color-primary, 90%) !default;

// 灰色
$--color-default-grey-1: mix($--color-white, $--color-black, 10%) !default;
$--color-default-grey-2: mix($--color-white, $--color-black, 20%) !default;
$--color-default-grey-3: mix($--color-white, $--color-black, 30%) !default;
$--color-default-grey-4: mix($--color-white, $--color-black, 40%) !default;
$--color-default-grey-5: mix($--color-white, $--color-black, 50%) !default;
$--color-default-grey-6: mix($--color-white, $--color-black, 60%) !default;
$--color-default-grey-7: mix($--color-white, $--color-black, 70%) !default;
$--color-default-grey-8: mix($--color-white, $--color-black, 80%) !default;
$--color-default-grey-9: mix($--color-white, $--color-black, 90%) !default;

// success
$--color-success: #67c23a !default;
$--color-success-light-1: mix($--color-white, $--color-success, 10%) !default;
$--color-success-light-2: mix($--color-white, $--color-success, 20%) !default;
$--color-success-light-3: mix($--color-white, $--color-success, 30%) !default;
$--color-success-light-4: mix($--color-white, $--color-success, 40%) !default;
$--color-success-light-5: mix($--color-white, $--color-success, 50%) !default;
$--color-success-light-6: mix($--color-white, $--color-success, 60%) !default;
$--color-success-light-7: mix($--color-white, $--color-success, 70%) !default;
$--color-success-light-8: mix($--color-white, $--color-success, 80%) !default;
$--color-success-light-9: mix($--color-white, $--color-success, 90%) !default;

$--color-success-dark-1: mix($--color-black, $--color-success, 10%) !default;
$--color-success-dark-2: mix($--color-black, $--color-success, 20%) !default;
$--color-success-dark-3: mix($--color-black, $--color-success, 30%) !default;
$--color-success-dark-4: mix($--color-black, $--color-success, 40%) !default;
$--color-success-dark-5: mix($--color-black, $--color-success, 50%) !default;
$--color-success-dark-6: mix($--color-black, $--color-success, 60%) !default;
$--color-success-dark-7: mix($--color-black, $--color-success, 70%) !default;
$--color-success-dark-8: mix($--color-black, $--color-success, 80%) !default;
$--color-success-dark-9: mix($--color-black, $--color-success, 90%) !default;

// warning
$--color-warning: #e6a23c !default;
$--color-warning-light-1: mix($--color-white, $--color-warning, 10%) !default;
$--color-warning-light-2: mix($--color-white, $--color-warning, 20%) !default;
$--color-warning-light-3: mix($--color-white, $--color-warning, 30%) !default;
$--color-warning-light-4: mix($--color-white, $--color-warning, 40%) !default;
$--color-warning-light-5: mix($--color-white, $--color-warning, 50%) !default;
$--color-warning-light-6: mix($--color-white, $--color-warning, 60%) !default;
$--color-warning-light-7: mix($--color-white, $--color-warning, 70%) !default;
$--color-warning-light-8: mix($--color-white, $--color-warning, 80%) !default;
$--color-warning-light-9: mix($--color-white, $--color-warning, 90%) !default;

$--color-warning-dark-1: mix($--color-black, $--color-warning, 10%) !default;
$--color-warning-dark-2: mix($--color-black, $--color-warning, 20%) !default;
$--color-warning-dark-3: mix($--color-black, $--color-warning, 30%) !default;
$--color-warning-dark-4: mix($--color-black, $--color-warning, 40%) !default;
$--color-warning-dark-5: mix($--color-black, $--color-warning, 50%) !default;
$--color-warning-dark-6: mix($--color-black, $--color-warning, 60%) !default;
$--color-warning-dark-7: mix($--color-black, $--color-warning, 70%) !default;
$--color-warning-dark-8: mix($--color-black, $--color-warning, 80%) !default;
$--color-warning-dark-9: mix($--color-black, $--color-warning, 90%) !default;

// danger
$--color-danger: #f56c6c !default;
$--color-danger-light-1: mix($--color-white, $--color-danger, 10%) !default;
$--color-danger-light-2: mix($--color-white, $--color-danger, 20%) !default;
$--color-danger-light-3: mix($--color-white, $--color-danger, 30%) !default;
$--color-danger-light-4: mix($--color-white, $--color-danger, 40%) !default;
$--color-danger-light-5: mix($--color-white, $--color-danger, 50%) !default;
$--color-danger-light-6: mix($--color-white, $--color-danger, 60%) !default;
$--color-danger-light-7: mix($--color-white, $--color-danger, 70%) !default;
$--color-danger-light-8: mix($--color-white, $--color-danger, 80%) !default;
$--color-danger-light-9: mix($--color-white, $--color-danger, 90%) !default;

$--color-danger-dark-1: mix($--color-black, $--color-danger, 10%) !default;
$--color-danger-dark-2: mix($--color-black, $--color-danger, 20%) !default;
$--color-danger-dark-3: mix($--color-black, $--color-danger, 30%) !default;
$--color-danger-dark-4: mix($--color-black, $--color-danger, 40%) !default;
$--color-danger-dark-5: mix($--color-black, $--color-danger, 50%) !default;
$--color-danger-dark-6: mix($--color-black, $--color-danger, 60%) !default;
$--color-danger-dark-7: mix($--color-black, $--color-danger, 70%) !default;
$--color-danger-dark-8: mix($--color-black, $--color-danger, 80%) !default;
$--color-danger-dark-9: mix($--color-black, $--color-danger, 90%) !default;

// info
$--color-info: #909399 !default;
$--color-info-light-1: mix($--color-white, $--color-info, 10%) !default;
$--color-info-light-2: mix($--color-white, $--color-info, 20%) !default;
$--color-info-light-3: mix($--color-white, $--color-info, 30%) !default;
$--color-info-light-4: mix($--color-white, $--color-info, 40%) !default;
$--color-info-light-5: mix($--color-white, $--color-info, 50%) !default;
$--color-info-light-6: mix($--color-white, $--color-info, 60%) !default;
$--color-info-light-7: mix($--color-white, $--color-info, 70%) !default;
$--color-info-light-8: mix($--color-white, $--color-info, 80%) !default;
$--color-info-light-9: mix($--color-white, $--color-info, 90%) !default;

$--color-info-dark-1: mix($--color-black, $--color-info, 10%) !default;
$--color-info-dark-2: mix($--color-black, $--color-info, 20%) !default;
$--color-info-dark-3: mix($--color-black, $--color-info, 30%) !default;
$--color-info-dark-4: mix($--color-black, $--color-info, 40%) !default;
$--color-info-dark-5: mix($--color-black, $--color-info, 50%) !default;
$--color-info-dark-6: mix($--color-black, $--color-info, 60%) !default;
$--color-info-dark-7: mix($--color-black, $--color-info, 70%) !default;
$--color-info-dark-8: mix($--color-black, $--color-info, 80%) !default;
$--color-info-dark-9: mix($--color-black, $--color-info, 90%) !default;




// base
@mixin _mC_($prefix, $name, $shuxin, $color, $subfix, $action) {
    .#{$prefix}[#{$name}-#{$subfix}]#{$action}, .#{$prefix}[#{$name}_#{$subfix}]#{$action} {
        #{$shuxin}: #{$color};
    }
}
@mixin _nC_($prefix, $name, $shuxin, $color, $subfix) {
    .#{$prefix}[#{$name}-#{$subfix}], .#{$prefix}[#{$name}_#{$subfix}]{
        #{$shuxin}: #{$color};
    }
}
@mixin _hC_($prefix, $name, $shuxin, $color, $subfix, $action) {
    .#{$prefix}[#{$name}-#{$subfix}_#{$action}]:hover,
    .#{$prefix}[#{$name}-#{$subfix}-#{$action}]:hover,
    .#{$prefix}[#{$name}_#{$subfix}_#{$action}]:hover {
        #{$shuxin}: #{$color};
        cursor: pointer;
    }
}
@mixin _aC_($prefix, $name, $shuxin, $color, $subfix, $action) {
    .#{$prefix}[#{$name}-#{$subfix}_#{$action}]:active,
    .#{$prefix}[#{$name}-#{$subfix}-#{$action}]:active,
    .#{$prefix}[#{$name}_#{$subfix}_#{$action}]:active {
        #{$shuxin}: #{$color};
        cursor: pointer;
    }
}
@mixin _sC_($prefix, $name, $shuxin, $color, $subfix, $action) {
    .#{$prefix}[selected][#{$name}-#{$subfix}_#{$action}],
    .#{$prefix}[selected][#{$name}-#{$subfix}-#{$action}],
    .#{$prefix}[selected][#{$name}_#{$subfix}_#{$action}] {
        #{$shuxin}: #{$color};
        cursor: pointer;

        &:after {
            #{$shuxin}: #{$color};
        }
    }
}
@mixin _dC_($prefix, $name, $shuxin, $color, $subfix, $action) {
    .#{$prefix}[disabled][#{$name}-#{$subfix}_#{$action}],
    .#{$prefix}[disabled][#{$name}-#{$subfix}-#{$action}],
    .#{$prefix}[disabled][#{$name}_#{$subfix}_#{$action}] {
        #{$shuxin}: #{$color};
        cursor: not-allowed;
    }
}


// mixin
$NAME_MAP: (light: lig, dark: dar, default: def, primary: pri, success: s, warning: w, danger: d, info: i);
$SUBFIX_MAP: (font: f, background: bg, border: b);
@mixin mainColor($prefix, $name, $shuxin, $color, $subfix, $action) {
    @include _mC_($prefix, $name, $shuxin, $color, $subfix, $action);
}
@mixin normalColor($prefix, $name, $shuxin, $color, $subfix) {
    @each $key, $val in $NAME_MAP {
        @if $name == $key {
            @include _nC_($prefix, $val, $shuxin, $color, $subfix);
            @each $sb1, $sb2 in $SUBFIX_MAP {
                @if $subfix == $sb1 {
                    @include _nC_($prefix, $val, $shuxin, $color, $sb2);
                }
            }
        }
    }
    @each $sb1, $sb2 in $SUBFIX_MAP {
        @if $subfix == $sb1 {
            @include _nC_($prefix, $name, $shuxin, $color, $sb2);
            // @each $key, $val in $NAME_MAP {
            //     @if $name == $key {
            //         @include _nC_($prefix, $val, $shuxin, $color, $sb2);
            //     }
            // }
        }
    }
    @include _nC_($prefix, $name, $shuxin, $color, $subfix);
}
@mixin hoverColor($prefix, $name, $shuxin, $color, $subfix) {
    @each $key, $val in $NAME_MAP {
        @if $name == $key {
            @include _hC_($prefix, $val, $shuxin, $color, $subfix, h);
            @include _hC_($prefix, $val, $shuxin, $color, $subfix, hov);
            @include _hC_($prefix, $val, $shuxin, $color, $subfix, hover);
            @each $sb1, $sb2 in $SUBFIX_MAP {
                @if $subfix == $sb1 {
                    @include _hC_($prefix, $val, $shuxin, $color, $sb2, h);
                    @include _hC_($prefix, $val, $shuxin, $color, $sb2, hov);
                    @include _hC_($prefix, $val, $shuxin, $color, $sb2, hover);
                }
            }
        }
    }
    @each $sb1, $sb2 in $SUBFIX_MAP {
        @if $subfix == $sb1 {
            @include _hC_($prefix, $name, $shuxin, $color, $sb2, h);
            @include _hC_($prefix, $name, $shuxin, $color, $sb2, hov);
            @include _hC_($prefix, $name, $shuxin, $color, $sb2, hover);
            // @each $key, $val in $NAME_MAP {
            //     @if $name == $key {
            //         @include _hC_($prefix, $val, $shuxin, $color, $sb2, h);
            //         @include _hC_($prefix, $val, $shuxin, $color, $sb2, hov);
            //         @include _hC_($prefix, $val, $shuxin, $color, $sb2, hover);
            //     }
            // }
        }
    }
    @include _hC_($prefix, $name, $shuxin, $color, $subfix, h);
    @include _hC_($prefix, $name, $shuxin, $color, $subfix, hov);
    @include _hC_($prefix, $name, $shuxin, $color, $subfix, hover);
}
@mixin activeColor($prefix, $name, $shuxin, $color, $subfix) {
    @each $key, $val in $NAME_MAP {
        @if $name == $key {
            @include _aC_($prefix, $val, $shuxin, $color, $subfix, a);
            @include _aC_($prefix, $val, $shuxin, $color, $subfix, act);
            @include _aC_($prefix, $val, $shuxin, $color, $subfix, active);
            @each $sb1, $sb2 in $SUBFIX_MAP {
                @if $subfix == $sb1 {
                    @include _aC_($prefix, $val, $shuxin, $color, $sb2, a);
                    @include _aC_($prefix, $val, $shuxin, $color, $sb2, act);
                    @include _aC_($prefix, $val, $shuxin, $color, $sb2, active);
                }
            }
        }
    }
    @each $sb1, $sb2 in $SUBFIX_MAP {
        @if $subfix == $sb1 {
            @include _aC_($prefix, $name, $shuxin, $color, $sb2, a);
            @include _aC_($prefix, $name, $shuxin, $color, $sb2, act);
            @include _aC_($prefix, $name, $shuxin, $color, $sb2, active);
            // @each $key, $val in $NAME_MAP {
            //     @if $name == $key {
            //         @include _aC_($prefix, $val, $shuxin, $color, $sb2, a);
            //         @include _aC_($prefix, $val, $shuxin, $color, $sb2, act);
            //         @include _aC_($prefix, $val, $shuxin, $color, $sb2, active);
            //     }
            // }
        }
    }
    @include _aC_($prefix, $name, $shuxin, $color, $subfix, a);
    @include _aC_($prefix, $name, $shuxin, $color, $subfix, act);
    @include _aC_($prefix, $name, $shuxin, $color, $subfix, active);
}
@mixin selectedColor($prefix, $name, $shuxin, $color, $subfix) {
    @each $key, $val in $NAME_MAP {
        @if $name == $key {
            @include _sC_($prefix, $val, $shuxin, $color, $subfix, s);
            @include _sC_($prefix, $val, $shuxin, $color, $subfix, sel);
            @include _sC_($prefix, $val, $shuxin, $color, $subfix, selected);
            @each $sb1, $sb2 in $SUBFIX_MAP {
                @if $subfix == $sb1 {
                    @include _sC_($prefix, $val, $shuxin, $color, $sb2, s);
                    @include _sC_($prefix, $val, $shuxin, $color, $sb2, sel);
                    @include _sC_($prefix, $val, $shuxin, $color, $sb2, selected);
                }
            }
        }
    }
    @each $sb1, $sb2 in $SUBFIX_MAP {
        @if $subfix == $sb1 {
            @include _sC_($prefix, $name, $shuxin, $color, $sb2, s);
            @include _sC_($prefix, $name, $shuxin, $color, $sb2, sel);
            @include _sC_($prefix, $name, $shuxin, $color, $sb2, selected);
            // @each $key, $val in $NAME_MAP {
            //     @if $name == $key {
            //         @include _sC_($prefix, $val, $shuxin, $color, $sb2, s);
            //         @include _sC_($prefix, $val, $shuxin, $color, $sb2, sel);
            //         @include _sC_($prefix, $val, $shuxin, $color, $sb2, selected);
            //     }
            // }
        }
    }
    @include _sC_($prefix, $name, $shuxin, $color, $subfix, s);
    @include _sC_($prefix, $name, $shuxin, $color, $subfix, sel);
    @include _sC_($prefix, $name, $shuxin, $color, $subfix, selected);
}
@mixin disabledColor($prefix, $name, $shuxin, $color, $subfix) {
    @each $key, $val in $NAME_MAP {
        @if $name == $key {
            @include _dC_($prefix, $val, $shuxin, $color, $subfix, d);
            @include _dC_($prefix, $val, $shuxin, $color, $subfix, dis);
            @include _dC_($prefix, $val, $shuxin, $color, $subfix, disabled);
            @each $sb1, $sb2 in $SUBFIX_MAP {
                @if $subfix == $sb1 {
                    @include _dC_($prefix, $val, $shuxin, $color, $sb2, d);
                    @include _dC_($prefix, $val, $shuxin, $color, $sb2, dis);
                    @include _dC_($prefix, $val, $shuxin, $color, $sb2, disabled);
                }
            }
        }
    }
    @each $sb1, $sb2 in $SUBFIX_MAP {
        @if $subfix == $sb1 {
            @include _dC_($prefix, $name, $shuxin, $color, $sb2, d);
            @include _dC_($prefix, $name, $shuxin, $color, $sb2, dis);
            @include _dC_($prefix, $name, $shuxin, $color, $sb2, disabled);
            // @each $key, $val in $NAME_MAP {
            //     @if $name == $key {
            //         @include _dC_($prefix, $val, $shuxin, $color, $sb2, d);
            //         @include _dC_($prefix, $val, $shuxin, $color, $sb2, dis);
            //         @include _dC_($prefix, $val, $shuxin, $color, $sb2, disabled);
            //     }
            // }
        }
    }
    @include _dC_($prefix, $name, $shuxin, $color, $subfix, d);
    @include _dC_($prefix, $name, $shuxin, $color, $subfix, dis);
    @include _dC_($prefix, $name, $shuxin, $color, $subfix, disabled);
}
