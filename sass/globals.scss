$--main-font-size: 10px !default;
// 主颜色
$--color-default: #314659 !default;

$--color-white: #FFFFFF !default;
$--color-black: #000000 !default;

// primary
$--color-primary: #409EFF !default;
$--color-primary-light-1: mix($--color-white, $--color-primary, 10%) !default; /* #53a8ff */
$--color-primary-light-2: mix($--color-white, $--color-primary, 20%) !default; /* #66b1ff */
$--color-primary-light-3: mix($--color-white, $--color-primary, 30%) !default; /* #79bbff */
$--color-primary-light-4: mix($--color-white, $--color-primary, 40%) !default; /* #8cc5ff */
$--color-primary-light-5: mix($--color-white, $--color-primary, 50%) !default; /* #a0cfff */
$--color-primary-light-6: mix($--color-white, $--color-primary, 60%) !default; /* #b3d8ff */
$--color-primary-light-7: mix($--color-white, $--color-primary, 70%) !default; /* #c6e2ff */
$--color-primary-light-8: mix($--color-white, $--color-primary, 80%) !default; /* #d9ecff */
$--color-primary-light-9: mix($--color-white, $--color-primary, 90%) !default; /* #ecf5ff */

$--color-primary-dark-1: mix($--color-black, $--color-primary, 10%) !default; /* #3a8ee6 */
$--color-primary-dark-2: mix($--color-black, $--color-primary, 20%) !default; /* #337ecc */
$--color-primary-dark-3: mix($--color-black, $--color-primary, 30%) !default; /* #2d6fb3 */
$--color-primary-dark-4: mix($--color-black, $--color-primary, 40%) !default; /* #265f99 */
$--color-primary-dark-5: mix($--color-black, $--color-primary, 50%) !default; /* #204f80 */
$--color-primary-dark-6: mix($--color-black, $--color-primary, 60%) !default; /* #1a3f66 */
$--color-primary-dark-7: mix($--color-black, $--color-primary, 70%) !default; /* #132f4d */
$--color-primary-dark-8: mix($--color-black, $--color-primary, 80%) !default; /* #0d2033 */
$--color-primary-dark-9: mix($--color-black, $--color-primary, 90%) !default; /* #06101a */

// 灰色
$--color-default-grey-1: mix($--color-white, $--color-black, 10%) !default;
$--color-default-grey-2: mix($--color-white, $--color-black, 20%) !default;
$--color-default-grey-3: mix($--color-white, $--color-black, 30%) !default;
$--color-default-grey-4: mix($--color-white, $--color-black, 40%) !default;
$--color-default-grey-5: mix($--color-white, $--color-black, 50%) !default;
$--color-default-grey-6: mix($--color-white, $--color-black, 60%) !default;
$--color-default-grey-7: mix($--color-white, $--color-black, 70%) !default;
$--color-default-grey-8: mix($--color-white, $--color-black, 80%) !default;
$--color-default-grey-9: mix($--color-white, $--color-black, 90%) !default;

// default
$--color-default-light-1: mix($--color-white, $--color-default, 10%) !default;
$--color-default-light-2: mix($--color-white, $--color-default, 20%) !default;
$--color-default-light-3: mix($--color-white, $--color-default, 30%) !default;
$--color-default-light-4: mix($--color-white, $--color-default, 40%) !default;
$--color-default-light-5: mix($--color-white, $--color-default, 50%) !default;
$--color-default-light-6: mix($--color-white, $--color-default, 60%) !default;
$--color-default-light-7: mix($--color-white, $--color-default, 70%) !default;
$--color-default-light-8: mix($--color-white, $--color-default, 80%) !default;
$--color-default-light-9: mix($--color-white, $--color-default, 90%) !default;

$--color-default-dark-1: mix($--color-black, $--color-default, 10%) !default;
$--color-default-dark-2: mix($--color-black, $--color-default, 20%) !default;
$--color-default-dark-3: mix($--color-black, $--color-default, 30%) !default;
$--color-default-dark-4: mix($--color-black, $--color-default, 40%) !default;
$--color-default-dark-5: mix($--color-black, $--color-default, 50%) !default;
$--color-default-dark-6: mix($--color-black, $--color-default, 60%) !default;
$--color-default-dark-7: mix($--color-black, $--color-default, 70%) !default;
$--color-default-dark-8: mix($--color-black, $--color-default, 80%) !default;
$--color-default-dark-9: mix($--color-black, $--color-default, 90%) !default;


// success
$--color-success: #67c23a !default;
$--color-success-light-1: mix($--color-white, $--color-success, 10%) !default;
$--color-success-light-2: mix($--color-white, $--color-success, 20%) !default;
$--color-success-light-3: mix($--color-white, $--color-success, 30%) !default;
$--color-success-light-4: mix($--color-white, $--color-success, 40%) !default;
$--color-success-light-5: mix($--color-white, $--color-success, 50%) !default;
$--color-success-light-6: mix($--color-white, $--color-success, 60%) !default;
$--color-success-light-7: mix($--color-white, $--color-success, 70%) !default;
$--color-success-light-8: mix($--color-white, $--color-success, 80%) !default;
$--color-success-light-9: mix($--color-white, $--color-success, 90%) !default;

$--color-success-dark-1: mix($--color-black, $--color-success, 10%) !default;
$--color-success-dark-2: mix($--color-black, $--color-success, 20%) !default;
$--color-success-dark-3: mix($--color-black, $--color-success, 30%) !default;
$--color-success-dark-4: mix($--color-black, $--color-success, 40%) !default;
$--color-success-dark-5: mix($--color-black, $--color-success, 50%) !default;
$--color-success-dark-6: mix($--color-black, $--color-success, 60%) !default;
$--color-success-dark-7: mix($--color-black, $--color-success, 70%) !default;
$--color-success-dark-8: mix($--color-black, $--color-success, 80%) !default;
$--color-success-dark-9: mix($--color-black, $--color-success, 90%) !default;

// warning
$--color-warning: #e6a23c !default;
$--color-warning-light-1: mix($--color-white, $--color-warning, 10%) !default;
$--color-warning-light-2: mix($--color-white, $--color-warning, 20%) !default;
$--color-warning-light-3: mix($--color-white, $--color-warning, 30%) !default;
$--color-warning-light-4: mix($--color-white, $--color-warning, 40%) !default;
$--color-warning-light-5: mix($--color-white, $--color-warning, 50%) !default;
$--color-warning-light-6: mix($--color-white, $--color-warning, 60%) !default;
$--color-warning-light-7: mix($--color-white, $--color-warning, 70%) !default;
$--color-warning-light-8: mix($--color-white, $--color-warning, 80%) !default;
$--color-warning-light-9: mix($--color-white, $--color-warning, 90%) !default;

$--color-warning-dark-1: mix($--color-black, $--color-warning, 10%) !default;
$--color-warning-dark-2: mix($--color-black, $--color-warning, 20%) !default;
$--color-warning-dark-3: mix($--color-black, $--color-warning, 30%) !default;
$--color-warning-dark-4: mix($--color-black, $--color-warning, 40%) !default;
$--color-warning-dark-5: mix($--color-black, $--color-warning, 50%) !default;
$--color-warning-dark-6: mix($--color-black, $--color-warning, 60%) !default;
$--color-warning-dark-7: mix($--color-black, $--color-warning, 70%) !default;
$--color-warning-dark-8: mix($--color-black, $--color-warning, 80%) !default;
$--color-warning-dark-9: mix($--color-black, $--color-warning, 90%) !default;

// danger
$--color-danger: #f56c6c !default;
$--color-danger-light-1: mix($--color-white, $--color-danger, 10%) !default;
$--color-danger-light-2: mix($--color-white, $--color-danger, 20%) !default;
$--color-danger-light-3: mix($--color-white, $--color-danger, 30%) !default;
$--color-danger-light-4: mix($--color-white, $--color-danger, 40%) !default;
$--color-danger-light-5: mix($--color-white, $--color-danger, 50%) !default;
$--color-danger-light-6: mix($--color-white, $--color-danger, 60%) !default;
$--color-danger-light-7: mix($--color-white, $--color-danger, 70%) !default;
$--color-danger-light-8: mix($--color-white, $--color-danger, 80%) !default;
$--color-danger-light-9: mix($--color-white, $--color-danger, 90%) !default;

$--color-danger-dark-1: mix($--color-black, $--color-danger, 10%) !default;
$--color-danger-dark-2: mix($--color-black, $--color-danger, 20%) !default;
$--color-danger-dark-3: mix($--color-black, $--color-danger, 30%) !default;
$--color-danger-dark-4: mix($--color-black, $--color-danger, 40%) !default;
$--color-danger-dark-5: mix($--color-black, $--color-danger, 50%) !default;
$--color-danger-dark-6: mix($--color-black, $--color-danger, 60%) !default;
$--color-danger-dark-7: mix($--color-black, $--color-danger, 70%) !default;
$--color-danger-dark-8: mix($--color-black, $--color-danger, 80%) !default;
$--color-danger-dark-9: mix($--color-black, $--color-danger, 90%) !default;

// info
$--color-info: #909399 !default;
$--color-info-light-1: mix($--color-white, $--color-info, 10%) !default;
$--color-info-light-2: mix($--color-white, $--color-info, 20%) !default;
$--color-info-light-3: mix($--color-white, $--color-info, 30%) !default;
$--color-info-light-4: mix($--color-white, $--color-info, 40%) !default;
$--color-info-light-5: mix($--color-white, $--color-info, 50%) !default;
$--color-info-light-6: mix($--color-white, $--color-info, 60%) !default;
$--color-info-light-7: mix($--color-white, $--color-info, 70%) !default;
$--color-info-light-8: mix($--color-white, $--color-info, 80%) !default;
$--color-info-light-9: mix($--color-white, $--color-info, 90%) !default;

$--color-info-dark-1: mix($--color-black, $--color-info, 10%) !default;
$--color-info-dark-2: mix($--color-black, $--color-info, 20%) !default;
$--color-info-dark-3: mix($--color-black, $--color-info, 30%) !default;
$--color-info-dark-4: mix($--color-black, $--color-info, 40%) !default;
$--color-info-dark-5: mix($--color-black, $--color-info, 50%) !default;
$--color-info-dark-6: mix($--color-black, $--color-info, 60%) !default;
$--color-info-dark-7: mix($--color-black, $--color-info, 70%) !default;
$--color-info-dark-8: mix($--color-black, $--color-info, 80%) !default;
$--color-info-dark-9: mix($--color-black, $--color-info, 90%) !default;


// base
$NAME_MAP: (light: lig, dark: dar, grey: gre, default: def, primary: pri, success: suc, warning: war, danger: dan, info: inf);
$SUBFIX_MAP: (font: f, background: bg, border: b, border-top: bt, border-left: bl, border-right: br, border-bottom: bb);
$BORDER_MAP: (border-color: border, border-top-color: border-top, border-left-color: border-left, border-right-color: border-right, border-bottom-color: border-bottom);
@mixin _mC_($prefix, $name, $shuxin, $color, $subfix, $action) {
    [#{$prefix}][ot-#{$name}-#{$subfix}]#{$action},
    [#{$prefix}][ot_#{$name}_#{$subfix}]#{$action} {
        #{$shuxin}: #{$color};
    }
}
// normal
@mixin _nC_($prefix, $name, $shuxin, $color, $subfix, $ex) {
    #{$ex}, ##{$ex} {
        #{$shuxin}: #{$color};
        @each $key, $val in $BORDER_MAP {
            @if $shuxin == $key {
                #{$val}-style: solid;
                #{$val}-width: 1px;
            }
        }
    }
}
@mixin _nCE_($prefix, $name, $shuxin, $color, $subfix, $ex) {
    [#{$prefix}][ot-#{$name}-#{$subfix}],
    [#{$prefix}][ot_#{$name}_#{$subfix}] {
        @extend #{$ex};
    }
}
// hover
@mixin _hC_($prefix, $name, $shuxin, $color, $subfix, $action, $ex) {
    #{$ex}, ##{$ex} {
        #{$shuxin}: #{$color};
        cursor: pointer;
        @each $key, $val in $BORDER_MAP {
            @if $shuxin == $key {
                #{$val}-style: solid;
                #{$val}-width: 1px;
            }
        }
    }
}
@mixin _hCE_($prefix, $name, $shuxin, $color, $subfix, $action, $ex) {
    [#{$prefix}][ot-#{$name}-#{$subfix}-#{$action}]:hover,
    [#{$prefix}][ot_#{$name}_#{$subfix}_#{$action}]:hover {
        @extend #{$ex};
    }
}
// active
@mixin _aC_($prefix, $name, $shuxin, $color, $subfix, $action, $ex) {
    #{$ex}, ##{$ex} {
        #{$shuxin}: #{$color};
        cursor: pointer;
        @each $key, $val in $BORDER_MAP {
            @if $shuxin == $key {
                #{$val}-style: solid;
                #{$val}-width: 1px;
            }
        }
    }
}
@mixin _aCE_($prefix, $name, $shuxin, $color, $subfix, $action, $ex) {
    [#{$prefix}][ot-#{$name}-#{$subfix}-#{$action}]:active,
    [#{$prefix}][ot_#{$name}_#{$subfix}_#{$action}]:active {
        @extend #{$ex};
    }
}
// focus
@mixin _fC_($prefix, $name, $shuxin, $color, $subfix, $action, $ex) {
    #{$ex}, ##{$ex} {
        #{$shuxin}: #{$color};
        cursor: pointer;
        @each $key, $val in $BORDER_MAP {
            @if $shuxin == $key {
                #{$val}-style: solid;
                #{$val}-width: 1px;
            }
        }
    }
}
@mixin _fCE_($prefix, $name, $shuxin, $color, $subfix, $action, $ex) {
    [#{$prefix}][ot-#{$name}-#{$subfix}-#{$action}]:focus,
    [#{$prefix}][ot_#{$name}_#{$subfix}_#{$action}]:focus {
        @extend #{$ex};
    }
}
// selected
@mixin _sC_($prefix, $name, $shuxin, $color, $subfix, $action, $ex) {
    #{$ex}, ##{$ex} {
        #{$shuxin}: #{$color};
        cursor: pointer;

        &:not([ot-after]) {
            @each $key, $val in $BORDER_MAP {
                @if $shuxin == $key {
                    #{$val}-style: solid;
                    #{$val}-width: 1px;
                }
            }
        }

        &:after {
            #{$shuxin}: #{$color};
            @each $key, $val in $BORDER_MAP {
                @if $shuxin == $key {
                    #{$val}-style: solid;
                    #{$val}-width: 1px;
                }
            }
        }
    }
}
@mixin _sCE_($prefix, $name, $shuxin, $color, $subfix, $action, $ex) {
    [#{$prefix}][selected][ot-#{$name}-#{$subfix}-#{$action}],
    [#{$prefix}][selected][ot_#{$name}_#{$subfix}_#{$action}] {
        @extend #{$ex};
    }
}

// disabled
@mixin _dC_($prefix, $name, $shuxin, $color, $subfix, $action, $ex) {
    #{$ex}, ##{$ex} {
        #{$shuxin}: #{$color};
        cursor: not-allowed;
        @each $key, $val in $BORDER_MAP {
            @if $shuxin == $key {
                #{$val}-style: solid;
                #{$val}-width: 1px;
            }
        }
    }
}
@mixin _dCE_($prefix, $name, $shuxin, $color, $subfix, $action, $ex) {
    [#{$prefix}][disabled][ot-#{$name}-#{$subfix}-#{$action}],
    [#{$prefix}][disabled][ot_#{$name}_#{$subfix}_#{$action}] {
        @extend #{$ex};
    }
}


// mixin
@mixin mainColor($prefix, $name, $shuxin, $color, $subfix, $action) {
    @include _mC_($prefix, $name, $shuxin, $color, $subfix, $action);
}
@mixin normalColor($prefix, $name, $shuxin, $color, $subfix) {
    $ex: "#{$prefix}__color__#{$name}__#{$subfix}__normal";
    @include _nC_($prefix, $name, $shuxin, $color, $subfix, $ex);
    @each $key, $val in $NAME_MAP {
        @if $name == $key {
            @include _nCE_($prefix, $val, $shuxin, $color, $subfix, $ex);
            @each $sb1, $sb2 in $SUBFIX_MAP {
                @if $subfix == $sb1 {
                    @include _nCE_($prefix, $val, $shuxin, $color, $sb2, $ex);
                }
            }
        }
    }
    @each $sb1, $sb2 in $SUBFIX_MAP {
        @if $subfix == $sb1 {
            @include _nCE_($prefix, $name, $shuxin, $color, $sb2, $ex);
        }
    }
    @include _nCE_($prefix, $name, $shuxin, $color, $subfix, $ex);
}
@mixin hoverColor($prefix, $name, $shuxin, $color, $subfix) {
    $ex: "#{$prefix}__color__#{$name}__#{$subfix}__hover";
    @include _hC_($prefix, $name, $shuxin, $color, $subfix, hover, $ex);
    @each $key, $val in $NAME_MAP {
        @if $name == $key {
            @include _hCE_($prefix, $val, $shuxin, $color, $subfix, h, $ex);
            @include _hCE_($prefix, $val, $shuxin, $color, $subfix, hov, $ex);
            @include _hCE_($prefix, $val, $shuxin, $color, $subfix, hover, $ex);
            @each $sb1, $sb2 in $SUBFIX_MAP {
                @if $subfix == $sb1 {
                    @include _hCE_($prefix, $val, $shuxin, $color, $sb2, h, $ex);
                    @include _hCE_($prefix, $val, $shuxin, $color, $sb2, hov, $ex);
                    @include _hCE_($prefix, $val, $shuxin, $color, $sb2, hover, $ex);
                }
            }
        }
    }
    @each $sb1, $sb2 in $SUBFIX_MAP {
        @if $subfix == $sb1 {
            @include _hCE_($prefix, $name, $shuxin, $color, $sb2, h, $ex);
            @include _hCE_($prefix, $name, $shuxin, $color, $sb2, hov, $ex);
            @include _hCE_($prefix, $name, $shuxin, $color, $sb2, hover, $ex);
        }
    }
    @include _hCE_($prefix, $name, $shuxin, $color, $subfix, h, $ex);
    @include _hCE_($prefix, $name, $shuxin, $color, $subfix, hov, $ex);
    @include _hCE_($prefix, $name, $shuxin, $color, $subfix, hover, $ex);
}
@mixin activeColor($prefix, $name, $shuxin, $color, $subfix) {
    $ex: "#{$prefix}__color__#{$name}__#{$subfix}__active";
    @include _aC_($prefix, $name, $shuxin, $color, $subfix, active, $ex);
    @each $key, $val in $NAME_MAP {
        @if $name == $key {
            @include _aCE_($prefix, $val, $shuxin, $color, $subfix, a, $ex);
            @include _aCE_($prefix, $val, $shuxin, $color, $subfix, act, $ex);
            @include _aCE_($prefix, $val, $shuxin, $color, $subfix, active, $ex);
            @each $sb1, $sb2 in $SUBFIX_MAP {
                @if $subfix == $sb1 {
                    @include _aCE_($prefix, $val, $shuxin, $color, $sb2, a, $ex);
                    @include _aCE_($prefix, $val, $shuxin, $color, $sb2, act, $ex);
                    @include _aCE_($prefix, $val, $shuxin, $color, $sb2, active, $ex);
                }
            }
        }
    }
    @each $sb1, $sb2 in $SUBFIX_MAP {
        @if $subfix == $sb1 {
            @include _aCE_($prefix, $name, $shuxin, $color, $sb2, a, $ex);
            @include _aCE_($prefix, $name, $shuxin, $color, $sb2, act, $ex);
            @include _aCE_($prefix, $name, $shuxin, $color, $sb2, active, $ex);
        }
    }
    @include _aCE_($prefix, $name, $shuxin, $color, $subfix, a, $ex);
    @include _aCE_($prefix, $name, $shuxin, $color, $subfix, act, $ex);
    @include _aCE_($prefix, $name, $shuxin, $color, $subfix, active, $ex);
}
@mixin focusColor($prefix, $name, $shuxin, $color, $subfix) {
    $ex: "#{$prefix}__color__#{$name}__#{$subfix}__focus";
    @include _fC_($prefix, $name, $shuxin, $color, $subfix, focus, $ex);
    @each $key, $val in $NAME_MAP {
        @if $name == $key {
            @include _fCE_($prefix, $val, $shuxin, $color, $subfix, f, $ex);
            @include _fCE_($prefix, $val, $shuxin, $color, $subfix, foc, $ex);
            @include _fCE_($prefix, $val, $shuxin, $color, $subfix, focus, $ex);
            @each $sb1, $sb2 in $SUBFIX_MAP {
                @if $subfix == $sb1 {
                    @include _fCE_($prefix, $val, $shuxin, $color, $sb2, f, $ex);
                    @include _fCE_($prefix, $val, $shuxin, $color, $sb2, foc, $ex);
                    @include _fCE_($prefix, $val, $shuxin, $color, $sb2, focus, $ex);
                }
            }
        }
    }
    @each $sb1, $sb2 in $SUBFIX_MAP {
        @if $subfix == $sb1 {
            @include _fCE_($prefix, $name, $shuxin, $color, $sb2, f, $ex);
            @include _fCE_($prefix, $name, $shuxin, $color, $sb2, foc, $ex);
            @include _fCE_($prefix, $name, $shuxin, $color, $sb2, focus, $ex);
        }
    }
    @include _fCE_($prefix, $name, $shuxin, $color, $subfix, f, $ex);
    @include _fCE_($prefix, $name, $shuxin, $color, $subfix, foc, $ex);
    @include _fCE_($prefix, $name, $shuxin, $color, $subfix, focus, $ex);
}
@mixin selectedColor($prefix, $name, $shuxin, $color, $subfix) {
    $ex: "#{$prefix}__color__#{$name}__#{$subfix}__selected";
    @include _sC_($prefix, $name, $shuxin, $color, $subfix, selected, $ex);
    @each $key, $val in $NAME_MAP {
        @if $name == $key {
            @include _sCE_($prefix, $val, $shuxin, $color, $subfix, s, $ex);
            @include _sCE_($prefix, $val, $shuxin, $color, $subfix, sel, $ex);
            @include _sCE_($prefix, $val, $shuxin, $color, $subfix, selected, $ex);
            @each $sb1, $sb2 in $SUBFIX_MAP {
                @if $subfix == $sb1 {
                    @include _sCE_($prefix, $val, $shuxin, $color, $sb2, s, $ex);
                    @include _sCE_($prefix, $val, $shuxin, $color, $sb2, sel, $ex);
                    @include _sCE_($prefix, $val, $shuxin, $color, $sb2, selected, $ex);
                }
            }
        }
    }
    @each $sb1, $sb2 in $SUBFIX_MAP {
        @if $subfix == $sb1 {
            @include _sCE_($prefix, $name, $shuxin, $color, $sb2, s, $ex);
            @include _sCE_($prefix, $name, $shuxin, $color, $sb2, sel, $ex);
            @include _sCE_($prefix, $name, $shuxin, $color, $sb2, selected, $ex);
        }
    }
    @include _sCE_($prefix, $name, $shuxin, $color, $subfix, s, $ex);
    @include _sCE_($prefix, $name, $shuxin, $color, $subfix, sel, $ex);
    @include _sCE_($prefix, $name, $shuxin, $color, $subfix, selected, $ex);
}
@mixin disabledColor($prefix, $name, $shuxin, $color, $subfix) {
    $ex: "#{$prefix}__color__#{$name}__#{$subfix}__disabled";
    @include _dC_($prefix, $name, $shuxin, $color, $subfix, disabled, $ex);
    @each $key, $val in $NAME_MAP {
        @if $name == $key {
            @include _dCE_($prefix, $val, $shuxin, $color, $subfix, d, $ex);
            @include _dCE_($prefix, $val, $shuxin, $color, $subfix, dis, $ex);
            @include _dCE_($prefix, $val, $shuxin, $color, $subfix, disabled, $ex);
            @each $sb1, $sb2 in $SUBFIX_MAP {
                @if $subfix == $sb1 {
                    @include _dCE_($prefix, $val, $shuxin, $color, $sb2, d, $ex);
                    @include _dCE_($prefix, $val, $shuxin, $color, $sb2, dis, $ex);
                    @include _dCE_($prefix, $val, $shuxin, $color, $sb2, disabled, $ex);
                }
            }
        }
    }
    @each $sb1, $sb2 in $SUBFIX_MAP {
        @if $subfix == $sb1 {
            @include _dCE_($prefix, $name, $shuxin, $color, $sb2, d, $ex);
            @include _dCE_($prefix, $name, $shuxin, $color, $sb2, dis, $ex);
            @include _dCE_($prefix, $name, $shuxin, $color, $sb2, disabled, $ex);
        }
    }
    @include _dCE_($prefix, $name, $shuxin, $color, $subfix, d, $ex);
    @include _dCE_($prefix, $name, $shuxin, $color, $subfix, dis, $ex);
    @include _dCE_($prefix, $name, $shuxin, $color, $subfix, disabled, $ex);
}
